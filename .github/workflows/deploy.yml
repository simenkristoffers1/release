name: Deploy

on:
  workflow_dispatch:
    inputs:
      infrastructure-changed:
        description: "Whether the infrastructure has changed"
        required: true
        default: true
        type: boolean
      migrations-changed:
        description: "Whether the migrations have changed"
        required: true
        default: true
        type: boolean
      assistant-changed:
        description: "Whether the assistant has changed"
        required: true
        default: true
        type: boolean
      knowledge-search-changed:
        description: "Whether the knowledge search has changed"
        required: true
        default: true
        type: boolean
      chat-ui-changed:
        description: "Whether the chat UI has changed"
        required: true
        default: true
        type: boolean
      environment:
        description: "The environment to deploy to"
        required: true
        default: "staging"
        type: choice
        options:
          - production
          - staging

permissions:
  contents: read
  packages: write
  attestations: write
  id-token: write

jobs:
  check-changes:
    runs-on: ubuntu-latest
    outputs:
      infrastructure-changed: ${{ inputs.infrastructure-changed }}
      migrations-changed: ${{ inputs.migrations-changed }}
      assistant-changed: ${{ inputs.assistant-changed }}
      knowledge-search-changed: ${{ inputs.knowledge-search-changed }}
      chat-ui-changed: ${{ inputs.chat-ui-changed }}
    steps:
      - run: |
          echo "Deploying..."
          echo "Infrastructure changed: ${{ inputs.infrastructure-changed }}"
          echo "Migrations changed: ${{ inputs.migrations-changed }}"
          echo "Assistant changed: ${{ inputs.assistant-changed }}"
          echo "Knowledge search changed: ${{ inputs.knowledge-search-changed }}"
          echo "Chat UI changed: ${{ inputs.chat-ui-changed }}"

  provision-infrastructure:
    runs-on: ubuntu-latest
    needs: check-changes
    if: |
      github.ref == 'refs/heads/main' &&
      needs.check-changes.outputs.infrastructure-changed == 'true'
    steps:
      - uses: actions/checkout@v4
      - run: echo "Provisioning infrastructure..."

  apply-migrations:
    runs-on: ubuntu-latest
    needs: [check-changes, provision-infrastructure]
    # If the infrastructure has changed, apply the migrations
    # If the infrastructure has not changed, apply the migrations if the migrations have changed
    if: |
      (github.ref == 'refs/heads/main' && 
      needs.provision-infrastructure.result == 'success') ||
      (always() && github.ref == 'refs/heads/main' &&
      (needs.provision-infrastructure.result == 'success' || needs.provision-infrastructure.result == 'skipped') &&
      needs.check-changes.outputs.migrations-changed == 'true')
    steps:
      - uses: actions/checkout@v4
      - run: echo "Applying migrations..."

  deploy-assistant:
    runs-on: ubuntu-latest
    needs: [check-changes, provision-infrastructure, apply-migrations]
    # If the infrastructure or migrations have changed, deploy the assistant
    # If the infrastructure or migrations have not changed, deploy the assistant if the assistant has changed
    if: |
      (github.ref == 'refs/heads/main' &&
      needs.provision-infrastructure.result == 'success' &&
      needs.apply-migrations.result == 'success') ||
      (always() && github.ref == 'refs/heads/main' &&
      (needs.provision-infrastructure.result == 'success' || needs.provision-infrastructure.result == 'skipped') &&
      (needs.apply-migrations.result == 'success' || needs.apply-migrations.result == 'skipped') &&
      needs.check-changes.outputs.assistant-changed == 'true')
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push pre-release image (staging)
        if: ${{ inputs.environment == 'staging' }}
        uses: docker/build-push-action@v6
        with:
          context: assistant
          file: Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/assistant:${{ github.sha }}
            ghcr.io/${{ github.repository_owner }}/assistant:pre-release
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - run: echo "Deploying assistant..."

  deploy-knowledge-search:
    runs-on: ubuntu-latest
    needs: [check-changes, provision-infrastructure, apply-migrations]
    # If the infrastructure or migrations have changed, deploy the knowledge search
    # If the infrastructure or migrations have not changed, deploy the knowledge search if the knowledge search has changed
    if: |
      (github.ref == 'refs/heads/main' &&
      needs.provision-infrastructure.result == 'success' &&
      needs.apply-migrations.result == 'success') ||
      (always() && github.ref == 'refs/heads/main' &&
      (needs.provision-infrastructure.result == 'success' || needs.provision-infrastructure.result == 'skipped') &&
      (needs.apply-migrations.result == 'success' || needs.apply-migrations.result == 'skipped') &&
      needs.check-changes.outputs.knowledge-search-changed == 'true')
    steps:
      - uses: actions/checkout@v4
      - run: echo "Deploying knowledge-search..."
