name: Deploy Assistant

on:
  workflow_dispatch:
    inputs:
      infrastructure-changed:
        description: "Infrastructure changed"
        required: true
        type: boolean
      migrations-changed:
        description: "Migrations changed"
        required: true
        type: boolean
      assistant-changed:
        description: "Assistant changed"
        required: true
        type: boolean
      knowledge-changed:
        description: "Knowledge changed"
        required: true
        type: boolean

permissions:
  id-token: write
  contents: read
  packages: write

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    outputs:
      infrastructure-changed: ${{ inputs.infrastructure-changed }}
      migrations-changed: ${{ inputs.migrations-changed }}
      assistant-changed: ${{ inputs.assistant-changed }}
      knowledge-changed: ${{ inputs.knowledge-changed }}
      any_service_changed: ${{ inputs.assistant-changed || inputs.knowledge-changed }}
    steps:
      - run: |
          echo "Detecting changes..."
          echo "Infrastructure changed: ${{ inputs.infrastructure-changed }}"
          echo "Migrations changed: ${{ inputs.migrations-changed }}"
          echo "Assistant changed: ${{ inputs.assistant-changed }}"
          echo "Knowledge changed: ${{ inputs.knowledge-changed }}"

  provision-infrastructure-staging:
    needs: detect-changes
    uses: ./.github/workflows/reusable-deploy-infrastructure.yml
    with:
      environment: staging
    secrets: inherit
    if: |
      (always() && needs.detect-changes.outputs.infrastructure-changed == 'true')

  apply-migrations-staging:
    uses: ./.github/workflows/reusable-migrate-database.yml
    needs: [detect-changes, provision-infrastructure-staging]
    with:
      environment: staging
    secrets: inherit
    if: |
      (always() && needs.detect-changes.outputs.migrations-changed == 'true' &&
      (needs.provision-infrastructure-staging.result != 'success' || needs.provision-infrastructure-staging.result == 'skipped'))

  deploy-assistant-staging:
    uses: ./.github/workflows/publish-container-app.yml
    needs: [detect-changes, apply-migrations-staging]
    with:
      environment: staging
      resource-group: aiasst-staging
      container-app-name: aiasst-api
      image-name: aiasst-api
      context: ./assistant
      file: ./assistant/Dockerfile
      is-container-app-job: true
    secrets: inherit
    if: |
      (always() && needs.detect-changes.outputs.assistant-changed == 'true' &&
      (needs.apply-migrations-staging.result == 'success' || needs.apply-migrations-staging.result == 'skipped'))

  deploy-cleanup-job-staging:
    uses: ./.github/workflows/publish-container-app.yml
    needs: [detect-changes, apply-migrations-staging]
    with:
      environment: staging
      resource-group: aiasst-staging
      container-app-name: aiasst-cleanup-job
      image-name: aiasst-cleanup-job
      context: ./assistant
      file: ./assistant/Dockerfile.ConversationCleanupJob
      is-container-app-job: true
    secrets: inherit
    if: |
      (always() && needs.detect-changes.outputs.assistant-changed == 'true' &&
      (needs.apply-migrations-staging.result == 'success' || needs.apply-migrations-staging.result == 'skipped'))

  deploy-knowledge-staging:
    uses: ./.github/workflows/publish-container-app.yml
    needs: [detect-changes, apply-migrations-staging]
    with:
      environment: staging
      resource-group: aiasst-staging
      container-app-name: aiasst-knowledge
      image-name: aiasst-knowledge
      context: ./knowledge-search
      file: ./knowledge-search/Dockerfile
      is-container-app-job: true
    secrets: inherit
    if: |
      (always() && needs.detect-changes.outputs.knowledge-changed == 'true' &&
      (needs.apply-migrations-staging.result == 'success' || needs.apply-migrations-staging.result == 'skipped'))

  wait-for-production-approval:
    runs-on: ubuntu-latest
    environment: production-approval
    needs:
      [
        deploy-assistant-staging,
        deploy-knowledge-staging,
        deploy-cleanup-job-staging,
      ]
    if: always()
    steps:
      - run: |
          echo "Waiting for production approval..."

  provision-infrastructure-production:
    needs: [detect-changes, wait-for-production-approval]
    uses: ./.github/workflows/reusable-deploy-infrastructure.yml
    with:
      environment: production
    secrets: inherit
    if: |
      (always() && needs.detect-changes.outputs.infrastructure-changed == 'true')

  apply-migrations-production:
    needs: [detect-changes, provision-infrastructure-production]
    uses: ./.github/workflows/reusable-migrate-database.yml
    with:
      environment: production
    secrets: inherit
    if: |
      (always() && needs.detect-changes.outputs.migrations-changed == 'true' &&
      (needs.provision-infrastructure-production.result == 'success' || needs.provision-infrastructure-production.result == 'skipped'))

  deploy-assistant-production:
    uses: ./.github/workflows/publish-container-app.yml
    needs: [detect-changes, apply-migrations-production]
    with:
      environment: staging
      resource-group: aiasst-staging
      container-app-name: aiasst-api
      image-name: aiasst-api
      context: ./assistant
      file: ./assistant/Dockerfile
      is-container-app-job: true
    secrets: inherit
    if: |
      (always() && needs.detect-changes.outputs.assistant-changed == 'true' &&
      (needs.apply-migrations-production.result == 'success' || needs.apply-migrations-production.result == 'skipped'))

  deploy-cleanup-job-production:
    uses: ./.github/workflows/publish-container-app.yml
    needs: [detect-changes, apply-migrations-production]
    with:
      environment: staging
      resource-group: aiasst-staging
      container-app-name: aiasst-cleanup-job
      image-name: aiasst-cleanup-job
      context: ./assistant
      file: ./assistant/Dockerfile.ConversationCleanupJob
      is-container-app-job: true
    secrets: inherit
    if: |
      (always() && needs.detect-changes.outputs.assistant-changed == 'true' &&
      (needs.apply-migrations-production.result == 'success' || needs.apply-migrations-production.result == 'skipped'))

  deploy-knowledge-production:
    uses: ./.github/workflows/publish-container-app.yml
    needs: [detect-changes, apply-migrations-production]
    with:
      environment: staging
      resource-group: aiasst-staging
      container-app-name: aiasst-knowledge
      image-name: aiasst-knowledge
      context: ./knowledge-search
      file: ./knowledge-search/Dockerfile
      is-container-app-job: true
    secrets: inherit
    if: |
      (always() && needs.detect-changes.outputs.knowledge-changed == 'true' &&
      (needs.apply-migrations-production.result == 'success' || needs.apply-migrations-production.result == 'skipped'))
