name: Deploy Assistant

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version to deploy"
        required: true
        default: "assistant-v0.0.1"
      image_name:
        description: "Image name"
        required: true
        default: "assistant"
      context:
        description: "Context"
        required: true
        default: "./assistant"
      file:
        description: "File"
        required: true
        default: "./assistant/Dockerfile"

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: |
          echo "Deploying assistant..."
          echo "Tag: ${{ github.ref_name }}"
  build-docker-image:
    runs-on: ubuntu-latest
    outputs:
      image-name: ${{ steps.set-image-name.outputs.image-name }}
    env:
      IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/${{ inputs.image_name }}
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/metadata-action@v5
        id: meta
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=match,pattern=v(.*),group=1,value=${{ inputs.version }}
            type=sha
        env:
          DOCKER_METADATA_ANNOTATIONS_LEVELS: manifest,index
      - uses: docker/build-push-action@v6
        id: build-push
        with:
          context: ${{ inputs.context }}
          file: ${{ inputs.file }}
          push: true
          provenance: mode=max
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - id: set-image-name
        run: |
          IMAGE_NAME_WITH_VERSION="${{ env.IMAGE_NAME }}@${{ inputs.version }}"
          echo "image-name=$IMAGE_NAME_WITH_VERSION" >> $GITHUB_OUTPUT
  debug:
    runs-on: ubuntu-latest
    needs: build-docker-image
    steps:
      - run: |
          echo "Image name: ${{ needs.build-docker-image.outputs.image-name }}"
