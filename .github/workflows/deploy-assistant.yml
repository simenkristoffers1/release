name: Deploy Assistant

on:
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  provision-infrastructure-staging:
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - run: |
          echo "Provisioning infrastructure..."

  apply-migrations-staging:
    runs-on: ubuntu-latest
    needs: provision-infrastructure-staging
    environment: staging
    steps:
      - run: |
          echo "Applying migrations..."

  build-assistant-image:
    uses: ./.github/workflows/reusable-build-docker.yml
    with:
      image-name: aiasst-api
      context: ./assistant
      file: ./assistant/Dockerfile

  deploy-assistant-image-staging:
    runs-on: ubuntu-latest
    environment: staging
    needs: [build-assistant-image, apply-migrations-staging]
    outputs:
      image-name-with-digest: ${{ needs.build-assistant-image.outputs.image-name-with-digest }}
    steps:
      - run: |
          echo "Deploying assistant image ${{ needs.build-assistant-image.outputs.image-name-with-digest }} to staging..."

  build-cleanup-job-image:
    uses: ./.github/workflows/reusable-build-docker.yml
    needs: apply-migrations-staging
    with:
      image-name: aiasst-cleanup-job
      context: ./assistant
      file: ./assistant/Dockerfile.ConversationCleanupJob

  deploy-cleanup-job-image-staging:
    runs-on: ubuntu-latest
    environment: staging
    needs: [build-cleanup-job-image, apply-migrations-staging]
    outputs:
      image-name-with-digest: ${{ needs.build-cleanup-job-image.outputs.image-name-with-digest }}
    steps:
      - run: |
          echo "Deploying cleanup job image ${{ needs.build-cleanup-job-image.outputs.image-name-with-digest }} to staging..."

  build-knowledge-image:
    uses: ./.github/workflows/reusable-build-docker.yml
    needs: apply-migrations-staging
    with:
      image-name: aiasst-knowledge
      context: ./knowledge-search
      file: ./knowledge-search/Dockerfile

  deploy-knowledge-image-staging:
    runs-on: ubuntu-latest
    environment: staging
    needs: [build-knowledge-image, apply-migrations-staging]
    outputs:
      image-name-with-digest: ${{ needs.build-knowledge-image.outputs.image-name-with-digest }}
    steps:
      - run: |
          echo "Deploying knowledge image ${{ needs.build-knowledge-image.outputs.image-name-with-digest }} to staging..."

  wait-for-production-approval:
    runs-on: ubuntu-latest
    environment: production-approval
    needs:
      [
        deploy-assistant-image-staging,
        deploy-cleanup-job-image-staging,
        deploy-knowledge-image-staging,
      ]
    steps:
      - run: |
          echo "Waiting for production approval..."

  provision-infrastructure-production:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - run: |
          echo "Provisioning infrastructure..."

  apply-migrations-production:
    runs-on: ubuntu-latest
    needs: provision-infrastructure-production
    environment: production
    steps:
      - run: |
          echo "Applying migrations..."

  test-production:
    runs-on: ubuntu-latest
    environment: production
    needs:
      [
        wait-for-production-approval,
        provision-infrastructure-production,
        apply-migrations-production,
      ]
    steps:
      - run: |
          echo "Testing assistant in production..."

  deploy-production:
    runs-on: ubuntu-latest
    environment: production
    needs:
      [
        test-production,
        provision-infrastructure-production,
        apply-migrations-production,
        deploy-assistant-image-staging,
        deploy-cleanup-job-image-staging,
        deploy-knowledge-image-staging,
      ]
    steps:
      - run: |
          echo "Deploying assistant to production..."
          echo "assistant: ${{ needs.deploy-assistant-image-staging.outputs.image-name-with-digest }}"
          echo "cleanup-job: ${{ needs.deploy-cleanup-job-image-staging.outputs.image-name-with-digest }}"
          echo "knowledge: ${{ needs.deploy-knowledge-image-staging.outputs.image-name-with-digest }}"

  # debug:
  #   runs-on: ubuntu-latest
  #   needs: call-build-docker-image
  #   steps:
  #     - run: |
  #         echo "Image name: ${{ needs.call-build-docker-image.outputs.image-name-with-digest }}"
